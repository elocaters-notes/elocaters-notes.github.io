{
    "componentChunkName": "component---src-templates-note-tsx",
    "path": "/far-shore-inn/lycanthropy",
    "result": {"data":{"site":{"siteMetadata":{"title":"Elocater's Notes","description":"A Digital Garden of Elocater's RP thoughts."}},"mdx":{"slug":"far-shore-inn/lycanthropy","frontmatter":{"title":"General Description of Lycanthropy","date":"March 20, 2022"},"links":[{"slug":"far-shore-inn/","frontmatter":{"title":"The Far Shore Inn"},"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"The Far Shore Inn\",\n  \"date\": \"2022-03-21T00:00:00.000Z\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"The Far Shore Inn is a medieval fantasy Discord \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/seeds/roleplay\"\n  }, \"rp\"), \" server.\\nThemes include slice-of-life, adventure, action, horror, and fantasy. The big\\nidea is that the story takes place on an island. Access to the island is\\nrestricted and shrouded in mystery - imagine something like the disappearances\\nin the Bermuda Triangle.\"));\n}\n;\nMDXContent.isMDXComponent = true;","links":[{"slug":"seeds/roleplay","frontmatter":{"title":"Roleplay"}}],"backlinks":[{"slug":"","frontmatter":{"title":"Home"}},{"slug":"far-shore-inn/mella-liadon","frontmatter":{"title":"Mella Liadon - Far Shore Inn Profile"}},{"slug":"far-shore-inn/lycanthropy","frontmatter":{"title":"General Description of Lycanthropy"}}]}],"backlinks":[{"slug":"far-shore-inn/mella-liadon","frontmatter":{"title":"Mella Liadon - Far Shore Inn Profile"},"excerpt":"General Info Name:   Mella Liadon Gender/Pronouns:  She/Her Race:  Elf Birthplace:  Off Island, she has not been to the  inn \nyet. Stage of…","links":[{"slug":"original-character/mella-liadon","frontmatter":{"title":"OC: Mella Liadon"}},{"slug":"far-shore-inn/","frontmatter":{"title":"The Far Shore Inn"}},{"slug":"far-shore-inn/lycanthropy","frontmatter":{"title":"General Description of Lycanthropy"}}],"backlinks":[]}],"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"General Description of Lycanthropy\",\n  \"date\": \"2022-03-20T00:00:00.000Z\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar Notice = makeShortcode(\"Notice\");\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Shapechangers in the \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/far-shore-inn/\"\n  }, \"Far Shore Inn setting\"), \" with at least two forms. The forms usually include humanoid, wolf, wolf-like beast, and everything in between. In humanoid form, they appear no different than a typical specimen of that humanoid race. They appear no different than a typical specimen of that wolf species in wolf form. In their wolf-like beast form, they have increased height and altered proportions while remaining wolf-like.\"), mdx(\"p\", null, \"There are two forms of lycanthropy, True and Infected. Being a true werewolf means being born with the condition by having at least one parent that carries the affliction. The origins of this condition are unknown and may vary from strain to strain. The second form is infected, where the condition is contracted by being injured by a werewolf's claws or bite. Not all werewolf injuries will lead to contracting lycanthropy, but you have a higher chance of catching it from a true lycanthrope than an infected lycanthrope.\"), mdx(\"p\", null, \"Some lycanthropes are in control of their ability to transform, and others are not. Its factors are undiscovered; some believe it's a complicated answer. Overall, it differs from person to person. Some Lycanthropes also have increased strength, speed, resilience, stamina and senses or possess abilities such as regeneration or hardened claws. Unfortunately, the condition of Lycanthropy can also carry an insatiable bloodlust. In extreme cases, the victim experiences difficulties remembering what they did while transformed, or they become delirious. Werewolves who starve themselves can turn feral and may kill impulsively or find their self-control is only restored when their hunger is sated. Some weaknesses they may have include Wolfsbane and silver.\"), mdx(Notice, {\n    title: \"Note\",\n    type: \"info\",\n    mdxType: \"Notice\"\n  }, \"This is shamelessly stolen from the description Chungus used for their character Isaac.\"));\n}\n;\nMDXContent.isMDXComponent = true;","excerpt":"Shapechangers in the  Far Shore Inn setting  with at least two forms. The forms usually include humanoid, wolf, wolf-like beast, and…","timeToRead":1}},"pageContext":{"id":"2c42998d-3f5f-5292-befe-6c28765d0d14"}},
    "staticQueryHashes": ["487830718"]}