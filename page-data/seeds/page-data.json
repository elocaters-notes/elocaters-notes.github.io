{
    "componentChunkName": "component---src-templates-note-tsx",
    "path": "/seeds/",
    "result": {"data":{"site":{"siteMetadata":{"title":"Elocater's Notes","description":"A Digital Garden of Elocater's RP thoughts."}},"mdx":{"slug":"seeds/","frontmatter":{"title":"Seeds","date":"March 20, 2022"},"links":[{"slug":"seeds/digital-garden","frontmatter":{"title":"Digital Garden"},"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Digital Garden\",\n  \"date\": \"2022-03-20T00:00:00.000Z\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"The term Digital Garden is not well-defined. The big idea is that it refers to\\na digital space that favors growth, creativity, and communication over the\\ncreation of finalized products. You can imagine \\\"growing\\\" ideas from singular\\nseeds into trees, plants, and forests of knowledge by linking ideas together.\"), mdx(\"p\", null, \"I stumbled into some neat resources about this recently\\u2014namely, this\\n\", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://maggieappleton.com/garden-history\"\n  }, \"brief history of digital gardens\"), \".\\nI also like this\\n\", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://enjoyment-work.netlify.app/\"\n  }, \"example of a digital garden\"), \" created with\\nJekyll.\"));\n}\n;\nMDXContent.isMDXComponent = true;","links":[],"backlinks":[{"slug":"","frontmatter":{"title":"Home"}},{"slug":"seeds/","frontmatter":{"title":"Seeds"}}]}],"backlinks":[],"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Seeds\",\n  \"date\": \"2022-03-20T00:00:00.000Z\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Seeds are posts about single ideas. They are not restricted to any single\\nroleplay universe. Many seeds are effectively just definitions for\\nterms, but they're more than a mere glossary. The term comes from the idea of\\na \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/seeds/digital-garden\"\n  }, \"Digital Garden\"), \". As such, seeds are building blocks\\nfor bigger ideas, by linking them together seeds can grow into full blown\\nideas!\"));\n}\n;\nMDXContent.isMDXComponent = true;","excerpt":"Seeds are posts about single ideas. They are not restricted to any single\nroleplay universe. Many seeds are effectively just definitions forâ€¦","timeToRead":1}},"pageContext":{"id":"c14c8d14-bcc2-5bcc-a512-5a8277db2493"}},
    "staticQueryHashes": ["487830718"]}