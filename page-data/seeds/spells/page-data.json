{
    "componentChunkName": "component---src-templates-note-tsx",
    "path": "/seeds/spells/",
    "result": {"data":{"site":{"siteMetadata":{"title":"Elocater's Notes","description":"A Digital Garden of Elocater's RP thoughts."}},"mdx":{"slug":"seeds/spells/","frontmatter":{"title":"Spell Reference - Elder Scrolls RP","date":"March 27, 2022"},"links":[{"slug":"seeds/soft-magic","frontmatter":{"title":"Soft Magic System"},"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Soft Magic System\",\n  \"date\": \"2022-03-27T00:00:00.000Z\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar Video = makeShortcode(\"Video\");\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Soft Magic systems generally have little to no guidance on what magic is\\ncapable of or limited by. In my opinion, this is the correct way to categorize\\nmagic in the Elder Scrolls universe. That might be surprising at first because\\nthere are literal \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"game mechanics\"), \" for magic that players use, but I'm really\\nthinking about the \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"stories\"), \" rather than the game mechanics. As a story telling\\ntool, magic in the Elder Scrolls seems incredibly fluid and generally follows\\nwhatever the quest-author decides is needed for the sake of their story.\"), mdx(\"p\", null, \"That flexibility poses a problem: \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"how can we maintain stakes\"), \".\"), mdx(\"p\", null, \"Personally, I find the video below a nice exploration of how to write with\\na soft magic system. The big idea is this:\"), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"A common way to write this is that virtually anything is possible within\\nthe soft magic system, but individual characters might only have specific\\npowers.\")), mdx(\"p\", null, \"One way to do this in a \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/seeds/roleplay\"\n  }, \"roleplay\"), \" setting is to give mage\\ncharacters a list of spells. This can help you (the writer) to maintain a\\nconsistent theme with the character, and it helps your collaborators understand\\nwhen a magical scene has tension.\"), mdx(\"h2\", null, \"Reference\"), mdx(Video, {\n    videoSrcURL: \"https://www.youtube.com/embed/ZVrnfniQiS8\",\n    videoTitle: \"On Writing: Soft Magic Systems\",\n    mdxType: \"Video\"\n  }), mdx(\"h2\", null, \"See Also\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://en.uesp.net/wiki/Lore:Magic\"\n  }, \"UESP Lore: Magic\"))));\n}\n;\nMDXContent.isMDXComponent = true;","links":[{"slug":"seeds/roleplay","frontmatter":{"title":"Roleplay"}}],"backlinks":[{"slug":"seeds/spells/","frontmatter":{"title":"Spell Reference - Elder Scrolls RP"}}]},{"slug":"seeds/spells/gust-of-wind","frontmatter":{"title":"Spell: Gust of Wind"},"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Spell: Gust of Wind\",\n  \"date\": \"2022-03-27T00:00:00.000Z\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h3\", null, \"Description\"), mdx(\"p\", null, \"A line of strong wind about 60 feet (~20 meters) long and 10 feet (~2.5 meters)\\nwide blasts away from the character. People and creatures caught within can be\\nstaggered or even pushed back by the force of the blast.\"), mdx(\"p\", null, \"The wind can be used to dissipate a gas or vapor, extinguish candles or torches,\\nor make a large fire flare up with additional oxygen.\"), mdx(\"h3\", null, \"Stats\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"School:\"), \" Destruction\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Skill Level:\"), \" Apprentice\"), mdx(\"h3\", null, \"See Also\"), mdx(\"p\", null, \"This spell was inspired by the\\n\", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://roll20.net/compendium/dnd5e/Gust%20of%20Wind\"\n  }, \"DND5e spell of the same name\"), \".\"));\n}\n;\nMDXContent.isMDXComponent = true;","links":[],"backlinks":[{"slug":"tales-of-tamriel/gwen-taloet","frontmatter":{"title":"Gwen Taloet - Tales of Tamriel Profile"}},{"slug":"seeds/spells/","frontmatter":{"title":"Spell Reference - Elder Scrolls RP"}}]},{"slug":"seeds/spells/hurricane","frontmatter":{"title":"Spell: Hurricane"},"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Spell: Hurricane\",\n  \"date\": \"2022-03-27T00:00:00.000Z\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h3\", null, \"Description\"), mdx(\"p\", null, \"Winds swirl and coil around the character, twisting into a tiny malestrom with\\nthem at the center. Nearby creatures are buffeted by the air, though not\\nactually hurt by it. Attacks and projectiles aimed at the character can be\\ndeflected by the strong winds. The effect can be disorienting for enemies in\\nmelee range and can make it hard to consistently hit the character.\"), mdx(\"p\", null, \"This spell requires magicka for as long as it's maintained. As such, it will be\\nhard for even a skilled mage to maintain this spell while also using other\\nspells.\"), mdx(\"h3\", null, \"Stats\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"School:\"), \" Destruction\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Skill Level:\"), \" Adept\"), mdx(\"h3\", null, \"See Also\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"This spell is inspired by the\\n\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://eso-skillbook.com/skill/hurricane\"\n  }, \"ESO game effect\"), \" with the same\\nname.\")));\n}\n;\nMDXContent.isMDXComponent = true;","links":[],"backlinks":[{"slug":"tales-of-tamriel/gwen-taloet","frontmatter":{"title":"Gwen Taloet - Tales of Tamriel Profile"}},{"slug":"seeds/spells/","frontmatter":{"title":"Spell Reference - Elder Scrolls RP"}}]},{"slug":"seeds/spells/ward","frontmatter":{"title":"Spell: Ward"},"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Spell: Ward\",\n  \"date\": \"2022-03-27T00:00:00.000Z\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h3\", null, \"Description\"), mdx(\"p\", null, \"A translucent disk of materialized magicka forms in front of the character.\\nSpells which strike the disk are absorbed entirely. Every spell the ward\\nabsorbs damages the ward until it breaks and needs to be recast. Physical\\nattacks are not effected in any way by this kind of magical ward.\"), mdx(\"p\", null, \"Generally, when working with wards, I try to reason about the relative strength\\nof spells. A novice ward can probably block a single novice spell before\\nbreaking. A master ward can probably block a single master spell before\\nbreaking, but it could likely block many many novice spells.\"), mdx(\"p\", null, \"Remember to consider the magicka cost of maintaining a ward. It would be\\nchallenging even for a skilled mage to maintain both a ward and another spell.\\nEven when they \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"can\"), \" do both at once, it's unlikely they can maintain it for\\nlong unless something is empowering them.\"), mdx(\"h3\", null, \"Stats\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"School:\"), \" Restoration\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Skill Level:\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Novice up to Master\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"casting with higher skill takes more magicka but causes the ward to be\\nstronger\")))), mdx(\"h3\", null, \"See Also\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://en.uesp.net/wiki/Skyrim:Ward\"\n  }, \"UESP Skyrim: Ward\"))));\n}\n;\nMDXContent.isMDXComponent = true;","links":[],"backlinks":[{"slug":"tales-of-tamriel/gwen-taloet","frontmatter":{"title":"Gwen Taloet - Tales of Tamriel Profile"}},{"slug":"seeds/spells/","frontmatter":{"title":"Spell Reference - Elder Scrolls RP"}}]},{"slug":"seeds/spells/slowfall","frontmatter":{"title":"Spell: Slowfall"},"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Spell: Slowfall\",\n  \"date\": \"2022-03-27T00:00:00.000Z\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h3\", null, \"Description\"), mdx(\"p\", null, \"Magicka shimmers around the character as they fall through the air. The\\nimmediate effect is that they slow to a safe rate of descent. There needs to\\nbe enough time for the spell to safely slow the character for this to do any\\ngood. When the character lands, they alight on their feet as if having only\\nfallen as short distance.\"), mdx(\"p\", null, \"This spell can be used on other people, but they need to be within sight of the\\ncaster.\"), mdx(\"p\", null, \"The spell consumes magicka for the entire duration of its use. It would be hard\\nfor a mage to maintain this while also using other spells.\"), mdx(\"h3\", null, \"Stats\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"School:\"), \" Alteration\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Skill Level:\"), \" Novice\"), mdx(\"h3\", null, \"See Also\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"The \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://roll20.net/compendium/dnd5e/Feather%20Fall\"\n  }, \"DnD5e Spell, Feather Fall\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"The \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://en.uesp.net/wiki/Morrowind:Slowfall\"\n  }, \"Slowfall\"), \" spell\")));\n}\n;\nMDXContent.isMDXComponent = true;","links":[],"backlinks":[{"slug":"tales-of-tamriel/gwen-taloet","frontmatter":{"title":"Gwen Taloet - Tales of Tamriel Profile"}},{"slug":"seeds/spells/","frontmatter":{"title":"Spell Reference - Elder Scrolls RP"}}]}],"backlinks":[],"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Spell Reference - Elder Scrolls RP\",\n  \"date\": \"2022-03-27T00:00:00.000Z\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"The Elder Scrolls uses a \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/seeds/soft-magic\"\n  }, \"soft magic system\"), \". As such, I\\nfrequently find myself needing to write down spells and abilities to use as\\nreference. What follows is a simple form I try to use when describing spells\\nas guidance for how to write with magic.\"), mdx(\"hr\", null), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-markdown\"\n  }, \"  ### Description\\n\\n  A plaintext description of the spell's effects. Try to focus on how the\\n  player will write the effect and on how other members of the scene might\\n  percieve it.\\n\\n  ### Stats\\n\\n  **School:**\\n    - Destruction\\n    - Restoration\\n    - Conjuration\\n    - Alteration\\n    - Illusion\\n    - Mysticism\\n    - Thamaturgy\\n    - Enchanting\\n    - etc...\\n\\n  **Skill Level:**\\n    - Novice (skill level: 0)\\n    - Apprentice (skill level: 25)\\n    - Adept (skill level: 50)\\n    - Expert (skill level: 75)\\n    - Master (skill level: 100)\\n\")), mdx(\"hr\", null), mdx(\"h2\", null, \"Spells by School\"), mdx(\"h3\", null, \"Destruction\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/seeds/spells/gust-of-wind\"\n  }, \"Gust of Wind\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/seeds/spells/hurricane\"\n  }, \"Hurricane\"))), mdx(\"h3\", null, \"Restoration\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/seeds/spells/ward\"\n  }, \"Ward\"))), mdx(\"h3\", null, \"Alteration\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/seeds/spells/slowfall\"\n  }, \"Slowfall\"))));\n}\n;\nMDXContent.isMDXComponent = true;","excerpt":"The Elder Scrolls uses a  soft magic system . As such, I\nfrequently find myself needing to write down spells and abilities to use as…","timeToRead":1}},"pageContext":{"id":"622d302a-235d-51d1-a5ef-38a3866e5589"}},
    "staticQueryHashes": ["487830718"]}